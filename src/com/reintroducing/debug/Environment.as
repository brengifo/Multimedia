package com.reintroducing.debug{	import flash.system.Capabilities;		/**	 * A small Singleton utility class that allows you to set debug and live path variables for local and remote testing without having to toggle anything.	 * 	 * @author Joshua Perez [http://www.joshua-studios.com]	 * @author Matt Przybylski [http://www.reintroducing.com]	 * @version 2.0	 */	public class Environment	{//- PRIVATE & PROTECTED VARIABLES -------------------------------------------------------------------------		// singleton instance		private static var _instance:Environment;		private static var _allowInstance:Boolean;				private var _debugPath:String;		private var _livePath:String;		private var _basePath:String;		private var _isLive:Boolean;		//- PUBLIC & INTERNAL VARIABLES ---------------------------------------------------------------------------				public static const DEFAULT_NAME:String = "com.reintroducing.debug.Environment";		//- CONSTRUCTOR	-------------------------------------------------------------------------------------------			// singleton instance of Environment		public static function getInstance():Environment 		{			if (Environment._instance == null)			{				Environment._allowInstance = true;				Environment._instance = new Environment();				Environment._allowInstance = false;			}						return Environment._instance;		}				public function Environment() 		{			if (!Environment._allowInstance)			{				throw new Error("Error: Use Environment.getInstance() instead of the new keyword.");			}		}		//- PRIVATE & PROTECTED METHODS ---------------------------------------------------------------------------				private function setProperPath():void		{			if (Capabilities.playerType == "PlugIn" || Capabilities.playerType == "ActiveX")			{				this._basePath = this._livePath;				this._isLive = true;			}			else			{				this._basePath = this._debugPath;				this._isLive = false;			}		}		//- PUBLIC & INTERNAL METHODS -----------------------------------------------------------------------------			/**		 * Sets the proper debug/live paths.		 * 		 * @param $debugPath A string representing the local (debug) path		 * @param $livePath A string representing the remote (live) path		 * 		 * @return void		 */		public function setPaths($debugPath:String, $livePath:String):void		{			this._debugPath = $debugPath;			this._livePath = $livePath;						this.setProperPath();		}	//- EVENT HANDLERS ----------------------------------------------------------------------------------------				//- GETTERS & SETTERS -------------------------------------------------------------------------------------			/**		 * Returns the basePath for use in loading assets.		 * 		 * @return String		 */		public function get basePath():String		{			return this._basePath;		}				/**		 * Returns a Boolean value if the site is on a live server or being tested locally.		 * 		 * @return Boolean		 */		public function get isLive():Boolean		{			return this._isLive;		}	//- HELPERS -----------------------------------------------------------------------------------------------			public function toString():String		{			return "com.reintroducing.debug.Environment";		}	//- END CLASS ---------------------------------------------------------------------------------------------	}}